#!/bin/bash
# 
# Date : 2020.10.20
# 목적 : HamoniKR 4.0 패키지 인스톨

echo "\033[32m"'----------------------------------------'"\033[0m"
echo "\033[32m"'### livecd에서 한글이 잘 나올 수 있도록 설정 ###'"\033[0m"
echo "\033[32m"'----------------------------------------'"\033[0m"

echo "\033[31m"'### 님프관련 설정 ###'"\033[0m"
im-config -n nimf
# 라이브시디에서 한글키보드를 사용하려면 nimf 설정의 XKB 옵션 중 Hangule 키를 Right Alt 사용으로 체크
sed -i "s/\[''\]/\['korean:ralt_rctrl'\]/g" /usr/share/glib-2.0/schemas/org.nimf.settings.gschema.xml

echo "\033[31m"'### 한글 언어팩 및 지역화 패키지 설치 ###'"\033[0m"
# 한글 언어팩 설치
sudo apt-get install -y language-pack-ko-base
sudo apt-get install -y language-pack-gnome-ko-base
# 지역화 패키지 설치
sudo apt-get install -y libreoffice-l10n-ko
sudo apt-get install -y libreoffice-help-ko
sudo apt-get install -y firefox-locale-ko
#sudo apt-get install -y thunderbird-locale-ko
#sudo apt-get install -y gimp-help-ko
sudo apt-get install -y hunspell-ko



echo "\033[32m"'-----------------'"\033[0m"
echo "\033[32m"'### 패키지 설치 ###'"\033[0m"
echo "\033[32m"'-----------------'"\033[0m"

echo "\033[31m"'### apt-transport-https - 패키지 관리자가 https를 통해 데이터 및 패키지에 접근할 수 있도록 하는 패키지 ###'"\033[0m"
sudo apt-get install -y apt-transport-https

echo "\033[31m"'### asbru-cm ###'"\033[0m"
sudo apt-get install -y asbru-cm
# asbru-cm bug fix : 시스템 전체에 사용하는 Perl Glib 모듈의 업데이트
sudo apt install -y libglib2.0-dev cpanminus
sudo cpanm -i Glib

#echo "\033[31m"'### balena-etcher-electron ###'"\033[0m"
#sudo apt-get install -y balena-etcher-electron

#echo "\033[31m"'### build-essential - 개발에 필요한 라이브러리 헤더파일을 가지고 있는 패키지 ###'"\033[0m"
#sudo apt-get install -y build-essential

#echo "\033[31m"'### boot-repair - 부트 영역이 손상되어 부팅이 되지 않을 때 복구 해주는 패키지 ###'"\033[0m"
#sudo apt-get install -y boot-repair

echo "\033[31m"'### clam - 안티 바이러스 패키지 ###'"\033[0m"
sudo apt-get install -y clamav-daemon clamav-freshclam clamav clamtk

echo "\033[31m"'### visual studio code ###'"\033[0m"
sudo apt-get install -y code

#echo "\033[31m"'### default-jdk ###'"\033[0m"
#sudo apt-get install -y default-jdk

# echo "\033[31m"'### docker ###'"\033[0m"
# sudo apt-get install -y docker-ce \
# 						docker-ce-cli \
# 						containerd.io

#echo "\033[31m"'### docker-clean - ※패키지 파일 아님 /usr/local/bin에 있는 스크립트 파일 ###'"\033[0m"
#curl -s https://raw.githubusercontent.com/ZZROTDesign/docker-clean/v2.0.4/docker-clean | sudo tee /usr/local/bin/docker-clean > /dev/null && sudo chmod +x /usr/local/bin/docker-clean

echo "\033[31m"'### dvdauthor ###'"\033[0m"
sudo apt-get install -y dvdauthor

echo "\033[31m"'### figlet ###'"\033[0m"
sudo apt-get install -y figlet
# echo 'figlet HamoniKR' >> /etc/skel/.bashrc"
# work log for persional"
#echo 'DEBEMAIL="hamonikr-packages@googlegroups.com"' >> /etc/skel/.bashrc
#echo 'DEBFULLNAME="HamoniKR Team"' >> /etc/skel/.bashrc
#echo 'export DEBEMAIL DEBFULLNAME' >> /etc/skel/.bashrc
#echo 'alias logout="gnome-session-quit --logout --no-prompt"' >> /etc/skel/.bashrc

echo "\033[31m"'### filezilla - ftp 소프트웨어 ###'"\033[0m"
sudo apt-get install -y filezilla

#echo "\033[31m"'### freeplane - 마인드맵 프로그램 ###'"\033[0m"
#sudo apt-get install -y freeplane

#echo "\033[31m"'### geany - 편집기 ###'"\033[0m"
#sudo apt-get install -y geany

#echo "\033[31m"'### gimp ###'"\033[0m"
#sudo apt-get install -y gimp

echo "\033[31m"'### git ###'"\033[0m"
sudo apt-get install -y git

echo "\033[31m"'### git-lfs - 대용량 파일 버전 관리 ###'"\033[0m"
sudo apt-get install -y git-lfs

#echo "\033[31m"'### github-desktop - 깃허브 데스크탑 ###'"\033[0m"
#sudo apt-get install -y github-desktop

echo "\033[31m"'### gnupg-agent ###'"\033[0m"
sudo apt-get install -y gnupg-agent

#echo "\033[31m"'### golang - Go언어 ###'"\033[0m"
#sudo apt-get install -y golang

echo "\033[31m"'### hamonikr-ff - 쉬운 터미널 검색, 편집 프로그램 ###'"\033[0m"
sudo apt-get install -y hamonikr-ff

echo "\033[31m"'### hardinfo - 컴퓨터 정보 확인 프로그램 ###'"\033[0m"
sudo apt-get install -y hardinfo

echo "\033[31m"'### htop - 실시간 프로세스 관리자 ###'"\033[0m"
sudo apt-get install -y htop

echo "\033[31m"'### iptraf - 실시간 패킷 분석 ###'"\033[0m"
sudo apt-get install -y iptraf

echo "\033[31m"'### kdenlive - 동영상 편집 프로그램 ###'"\033[0m"
sudo apt-get install -y kdenlive

echo "\033[31m"'### kodi ###'"\033[0m"
sudo apt-get install -y kodi

#echo "\033[31m"'### lutris ###'"\033[0m"
#sudo apt-get install -y lutris

#echo "\033[31m"'### meld ###'"\033[0m"
#sudo apt-get install -y meld

echo "\033[31m"'### naver-whale ###'"\033[0m"
sudo apt-get install -y naver-whale-stable

echo "\033[31m"'### nemo 추가 패키지 ###'"\033[0m"
sudo apt-get install -y \
		nemo-image-converter \
		nemo-seahorse \
		nemo-filename-repairer \
		nemo-share \
		nemo-compare

echo "\033[31m"'### nmap ###'"\033[0m"
sudo apt-get install -y nmap

echo "\033[31m"'### nmon ###'"\033[0m"
sudo apt-get install -y nmon

#echo "\033[31m"'### nodejs - v10.19.00 ###'"\033[0m"
#sudo apt-get install -y nodejs

#echo "\033[31m"'### npm ###'"\033[0m"
#sudo apt-get install -y npm

echo "\033[31m"'### numlockx ###'"\033[0m"
sudo apt-get install -y numlockx

#echo "\033[31m"'### obs-studio ###'"\033[0m"
#sudo apt-get install -y obs-studio

echo "\033[31m"'### onboard - 가상키보드 ###'"\033[0m"
sudo apt-get install -y hamonikr-onboard-layout-ko

#echo "\033[31m"'### pinta ###'"\033[0m"
#sudo apt-get install -y pinta

#echo "\033[31m"'### playonlinux ###'"\033[0m"
#sudo apt-get install -y playonlinux

#echo "\033[31m"'### putty ###'"\033[0m"
#sudo apt-get install -y putty

echo "\033[31m"'### pydf ###'"\033[0m"
sudo apt-get install -y pydf

echo "\033[31m"'### qt-fsarchiver ###'"\033[0m"
sudo apt-get install -y qt-fsarchiver

echo "\033[31m"'### remmina 원격접속 프로그램 ###'"\033[0m"
sudo apt-get install -y remmina remmina-plugin-rdp remmina-plugin-secret remmina-plugin-vnc remmina-plugin-spice

echo "\033[31m"'### samba ###'"\033[0m"
sudo apt-get install -y samba

echo "\033[31m"'### shutter 화면캡쳐 및 수정 ###'"\033[0m"
sudo apt-get install -y shutter
# gnome-web-photo는 shutter의 웹사이트 스크린샷을 사용할 때 필요한 패키지
sudo apt-get install -y gnome-web-photo

echo "\033[31m"'### simplescreenrecorder 화면녹화 ###'"\033[0m"
sudo apt-get install -y simplescreenrecorder

echo "\033[31m"'### stacer ###'"\033[0m"
sudo apt-get install -y stacer

#echo "\033[31m"'### steam ###'"\033[0m"
#sudo apt-get install -y steam

echo "\033[31m"'### software-properties-common ###'"\033[0m"
sudo apt-get install -y software-properties-common

echo "\033[31m"'### tree ###'"\033[0m"
sudo apt-get install -y tree

echo "\033[31m"'### vim ###'"\033[0m"
sudo apt-get install -y vim

echo "\033[31m"'### vlc 미디어 플레이어 ###'"\033[0m"
sudo apt-get install -y vlc

#echo "\033[31m"'### wine ###'"\033[0m"
#sudo apt-get install -y wine

#echo "\033[31m"'### wine-development ###'"\033[0m"
#sudo apt-get install -y wine-development

echo "\033[31m"'### xclip ###'"\033[0m"
sudo apt-get install -y xclip

echo "\033[31m"'### xrdp ###'"\033[0m"
sudo apt-get install -y xrdp

echo "\033[32m"'------------------------------------------------'"\033[0m"
echo "\033[32m"'### pkg jin upstream 추가한 단일 패키지 파일 설치 ###'"\033[0m"
echo "\033[32m"'------------------------------------------------'"\033[0m"

echo "\033[31m"'### 알집 ###'"\033[0m"
#/etc폴더 제거(내용포함), 그냥은 실행이 되지 않아 /usr/local/bin/lib안에 .sh 스크립트를 만들어 컨트롤
sudo apt-get install -y alzip

#echo "\033[31m"'### 팀업 ###'"\033[0m"
# control 파일의 패키지명이 대문자 > 수정하여 다시 패키징
#sudo apt-get install -y teamup



#echo "\033[31m"'### discord ###'"\033[0m"
#sudo apt-get install -y discord

#echo "\033[31m"'### python3-multibootusb ###'"\033[0m"
#sudo apt-get install -y python3-multibootusb

#echo "\033[31m"'### simplenote ###'"\033[0m"
#sudo apt-get install -y simplenote

echo "\033[31m"'### slack-desktop ###'"\033[0m"
sudo apt-get install -y slack-desktop

#echo "\033[31m"'### teams ###'"\033[0m"
#sudo apt-get install -y teams